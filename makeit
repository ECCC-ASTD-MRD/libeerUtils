#!/bin/bash -e
. ./VERSION

NAME="eerUtils"
SUMMARY="Library of common functions used by various CCMEP tools SPI, EER Models, ... (https:\/\/gitlab.science.gc.ca\/ECCC_CMOE_MODELS\/libeerutils)"
MAINTAINER="Jean-Philippe.Gauthier@canada.ca"
export DESCRIPTION="ECCC-SMC-CCMEP-CMOE Utility librairie package"
export VERSION=$EER_VERSION
export BUILDINFO=`[ -z "\${ORDENV_SETUP}" ] || git describe --always`

HELP="Arguments must be:\n\n   Information parameters:
\t-help        : This information
\t-version     : Version

   Commands:
\t-clear       : Clear package
\t-ssm         : Build SSM package
\t-build       : Compile package\n"

CLR=0
BLD=0
SSM=0
REC=0
INS=0

#----- Get arguments
while [ $# -gt 0 ]; do
    case "$1" in
        -clear)   CLR=1;;
        -reconf)  REC=1;;
        -build)   BLD=1;;
        -src)     SRC=1;;
        -ssm)     SSM=1;;
        -install) INS=1;;

        -h|-help)    printf -- "$HELP\n"; exit 0;;
        -v|-version) printf -- "$VERSION\n"; exit 0;;
        --)          shift; break;;
        *)           printf -- "Invalid argument $1.\n\n$HELP"; exit 1;;
    esac
    shift
done

#----- SSM packaging stuff
if [[ -n $COMP_ARCH ]]; then
   SSM_COMP=-${COMP_ARCH}
fi
ORDENV_PLAT=${ORDENV_PLAT:-`uname -s`-`uname -m`}
   
SSM_VERSION=${VERSION}${SSM_COMP}
SSM_NAME=${NAME}_${SSM_VERSION}_${ORDENV_PLAT}

MAKE=make
MAKEFILE=Makefile

#----- RMN stuff
if [[ -z ${COMP_ARCH} ]]; then
   EC_ARCH=${EC_ARCH}/gfortran
fi

if [[ -n ${ORDENV_VERSION} ]]; then
   if [[ `domainname -d` = "science.gc.ca" ]]; then
      echo "(INFO) Building on SCIENCE network"
   elif [[ `domainname -d` = "cmc.ec.gc.ca" ]]; then
      echo "(INFO) Building on ECCC network"
   fi
fi

if [[ $CLR -eq 1 || $SRC -eq 1 || $REC -eq 1 ]]; then
   $MAKE -f $MAKEFILE clear
fi

if [[ $BLD -eq 1 ]]; then
   export EC_CMAKE_MODULE_PATH="`pwd`/modules"
   export DESTDIR=${SSM_DEV}/workspace/${SSM_NAME}
 
   #----- Build non parallel lib and bin
   unset OMPI
   rm -f -r build; mkdir build; cd build;

   if [[ -n ${INTEL_LICENSE_FILE} ]]; then
      CMAKE_COMP_FLAGS="-DCMAKE_C_COMPILER=icc  -DCMAKE_CXX_COMPILER=icpc -DCMAKE_Fortran_COMPILER=ifort"
   fi
   if [[ -n ${CRAYPE_VERSION} ]]; then
      CMAKE_COMP_FLAGS="-DCMAKE_SYSTEM_NAME=CrayLinuxEnvironment"
   fi
#   CMAKE_COMP_FLAGS=""
   cmake -DTCL_SRC_DIR=${SSM_DEV}/src/ext/tcl8.6.6 -DGDAL_INCLUDE_DIR=`gdal-config --cflags` -DGDAL_VERSION=`gdal-config --version` $CMAKE_COMP_FLAGS ../
   $MAKE -f $MAKEFILE VERBOSE=1
   $MAKE -f $MAKEFILE install 

   #----- Build OpenMP/MPI lib only
   export OMPI=-ompi
   cmake -DTCL_SRC_DIR=${SSM_DEV}/src/ext/tcl8.6.6 -DGDAL_INCLUDE_DIR=`gdal-config --cflags` -DGDAL_VERSION=`gdal-config --version` $CMAKE_COMP_FLAGS ../
   $MAKE -f $MAKEFILE
   $MAKE -f $MAKEFILE install
fi

if [[ $SSM -eq 1 ]]; then

   printf -- "\n----- Building ssm package : ${SSM_DEV}/workspace/${SSM_NAME} -----\n"

   rm -f -r  ${SSM_DEV}/workspace/${SSM_NAME} ${SSM_DEV}/package/${SSM_NAME}.ssm 
   mkdir -p ${SSM_DEV}/package/ ${SSM_DEV}/workspace/${SSM_NAME}/.ssm.d  ${SSM_DEV}/workspace/${SSM_NAME}/etc/profile.d
   cp -r bin lib include VERSION ${SSM_DEV}/workspace/${SSM_NAME}
   ln -s Dict ${SSM_DEV}/workspace/${SSM_NAME}/o.dict
   cp .ssm.d/post-install ${SSM_DEV}/workspace/${SSM_NAME}/.ssm.d
   sed -e "s/NAME/${NAME}/" -e "s/VERSION/${SSM_VERSION}/" -e "s/PLATFORM/${ORDENV_PLAT}/" -e "s/MAINTAINER/${MAINTAINER}/" -e "s/BUILDINFO/${BUILDINFO}/" -e "s/DESCRIPTION/${DESCRIPTION}/" -e "s/SUMMARY/${SUMMARY}/" .ssm.d/control.json > ${SSM_DEV}/workspace/${SSM_NAME}/.ssm.d/control.json
   cd ${SSM_DEV}/workspace; tar -zcvf ${SSM_DEV}/package/${SSM_NAME}.ssm ${SSM_NAME}
#   rm -f -r  $(SSM_DEV)/workspace/$(SSM_NAME)
fi

if [[ $INS -eq 1 ]]; then
   $MAKE -f $MAKEFILE install
fi

if [[ $SRC -eq 1 ]]; then
   printf -- "\n----- Building source package : ${SSM_DEV}/src/${NAME}-${VERSION}  -----\n"

   rm -f -r ${SSM_DEV}/src/${NAME}*
   cp -r ../libeerUtils ${SSM_DEV}/src/${NAME}-${VERSION}
   find ${SSM_DEV}/src/${NAME}-${VERSION} -name .git -prune -exec rm -f -r {} \+
fi
