@PACKAGE_INIT@

# [[DOC]] for find_package (lists variables that are set automatically by CMake)
# https://cmake.org/cmake/help/v3.0/command/find_package.html
# [[DOC]] https://cmake.org/cmake/help/v3.14/manual/cmake-developer.7.html

#----- Set include directory
set_and_check(${CMAKE_FIND_PACKAGE_NAME}_INCLUDE_DIRS "@PACKAGE_INCLUDE_INSTALL_DIR@")

#----- Set the library
if( "OMPI" IN_LIST ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS )
   set_and_check(${CMAKE_FIND_PACKAGE_NAME}_LIBRARIES "@PACKAGE_LIB_INSTALL_DIR@/libeerUtils-ompi.a")
   set(${CMAKE_FIND_PACKAGE_NAME}_OMPI_FOUND TRUE)
else()
   set_and_check(${CMAKE_FIND_PACKAGE_NAME}_LIBRARIES "@PACKAGE_LIB_INSTALL_DIR@/libeerUtils.a")
endif()

#----- Create the imported target
string(TOUPPER ${CMAKE_FIND_PACKAGE_NAME} up)
add_library(${CMAKE_FIND_PACKAGE_NAME}::${CMAKE_FIND_PACKAGE_NAME} STATIC IMPORTED)
target_compile_definitions(${CMAKE_FIND_PACKAGE_NAME}::${CMAKE_FIND_PACKAGE_NAME} INTERFACE HAVE_${up} HAVE_GPC)
set_target_properties(${CMAKE_FIND_PACKAGE_NAME}::${CMAKE_FIND_PACKAGE_NAME} PROPERTIES
   IMPORTED_LOCATION             ${${CMAKE_FIND_PACKAGE_NAME}_LIBRARIES}
   INTERFACE_INCLUDE_DIRECTORIES ${${CMAKE_FIND_PACKAGE_NAME}_INCLUDE_DIRS}
)

#----- For compatibility reasons
set_property(TARGET ${CMAKE_FIND_PACKAGE_NAME}::${CMAKE_FIND_PACKAGE_NAME} APPEND PROPERTY
   INTERFACE_COMPILE_DEFINITIONS HAVE_EER)

#----- Check that everything is there and undefines ${PACKAGE_NAME}_FOUND if it's not the case
check_required_components(${CMAKE_FIND_PACKAGE_NAME})

#----- This part should eventually disapear once cmake handles it
if( NOT ${CMAKE_FIND_PACKAGE_NAME}_FIND_QUIETLY )
   message(STATUS "Found ${CMAKE_FIND_PACKAGE_NAME} version ${${CMAKE_FIND_PACKAGE_NAME}_VERSION}")
   message(STATUS "Found ${CMAKE_FIND_PACKAGE_NAME} libraries ${${CMAKE_FIND_PACKAGE_NAME}_LIBRARIES}")
   message(STATUS "Found ${CMAKE_FIND_PACKAGE_NAME} includes ${${CMAKE_FIND_PACKAGE_NAME}_INCLUDE_DIRS}")
endif()
